# Tox (http://tox.testrun.org/) is a tool for running tests
# in multiple virtualenvs. This configuration file will run the
# test suite on all supported python versions. To use it, "pip install tox"
# and then run "tox" from this directory.

[tox]
envlist = py27,py34

[testenv]
whitelist_externals =
    psql
    env
;https://bitbucket.org/hpk42/tox/issues/99/environment-variable-usage-schema-env-xxx
setenv =
    PGPM_TEST_USER_NAME = pgpm_test_user
    PGPM_TEST_DB_HOST = localhost
    PGPM_TEST_DB_PORT = 5432
    PGPM_TEST_DB_NAME = pgpm_test
    PGPM_TEST_USER_PASSWORD = pgpm_test_user_password
commands =
    psql -c 'DROP DATABASE IF EXISTS {env:PGPM_TEST_DB_NAME};' -U apanchoyan -d postgres
    psql -c 'DROP ROLE IF EXISTS {env:PGPM_TEST_USER_NAME};' -U apanchoyan -d postgres
    psql -c "DO $$ BEGIN EXECUTE 'CREATE ROLE {env:PGPM_TEST_USER_NAME} WITH SUPERUSER LOGIN PASSWORD ''{env:PGPM_TEST_USER_PASSWORD}'' VALID UNTIL ''' || to_char(current_date + INTERVAL '5 minutes', 'YYYY-MM-DD') || ''';'; END $$;" -U apanchoyan
    env PGPASSWORD={env:PGPM_TEST_USER_PASSWORD} psql -c 'create database {env:PGPM_TEST_DB_NAME};' -U pgpm_test_user -d postgres
    py.test --verbose --strict --cov-report term-missing --cov=pgpm tests/
    env PGPASSWORD={env:PGPM_TEST_USER_PASSWORD} psql -c 'DROP DATABASE IF EXISTS {env:PGPM_TEST_DB_NAME};' -U {env:PGPM_TEST_USER_NAME} -d postgres
    psql -c 'DROP ROLE IF EXISTS {env:PGPM_TEST_USER_NAME};' -U apanchoyan -d postgres
deps =
    pytest
    pytest-cov
    psycopg2
